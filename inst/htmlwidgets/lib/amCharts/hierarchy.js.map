{"version":3,"file":"hierarchy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/BreadcrumbBar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyNode.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/find.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/iterator.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Hierarchy.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/LinkedHierarchyNode.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyLink.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/LinkedHierarchy.ts","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/lcg.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/simulation.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/add.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/quad.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/x.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/y.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/quadtree.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/jiggle.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/collide.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/link.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/cover.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/data.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/extent.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/find.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/remove.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/root.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/size.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/visit.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/visitAfter.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/ForceDirected.ts","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/x.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/y.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/manyBody.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/accessors.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/lcg.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/enclose.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/siblings.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/array.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/index.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Pack.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/round.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/dice.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/partition.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Partition.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Sunburst.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/tree.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Tree.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/slice.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/binary.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Treemap.ts","webpack://@amcharts/amcharts5/./tmp/webpack/hierarchy.js"],"sourcesContent":["import { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class HierarchyDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst gridLayout = this._root.gridLayout;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/hierarchy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"Hierarchy\").setAll({\r\n\t\t\tlegendLabelText: \"{category}\",\r\n\t\t\tlegendValueText: \"{sum.formatNumber('#.#')}\",\r\n\t\t\twidth: p100,\r\n\t\t\theight: p100,\r\n\t\t\tcolors: ColorSet.new(this._root, { step: 2 }),\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\tsingleBranchOnly: true,\r\n\t\t\tmaskContent: true,\r\n\t\t\tanimationEasing: $ease.out($ease.cubic)\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\").setAll({\r\n\t\t\ttoggleKey: \"disabled\",\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\ttooltipText: \"{category}: {sum}\"\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"last\"]).setAll({\r\n\t\t\tcursorOverStyle: \"default\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"hierarchy\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.3\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"HierarchyLink\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrength: 0.9,\r\n\t\t\t\tdistance: 1.1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tfillOpacity: 1,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tradius: 15,\r\n\t\t\ttooltipY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\topacity: 1,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tstrokeDasharray: 0,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tradius: 15,\r\n\t\t\tscale: 1.1,\r\n\t\t\tinteractive: false\r\n\t\t})\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"disabled\", { opacity: 1, scale: 1.1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hoverDisabled\", { scale: 1.2, opacity: 1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hover\", { scale: 1.05, strokeDasharray: 0 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hidden\", { opacity: 0, strokeDasharray: 0 });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: BreadcrumbBar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"BreadcrumbBar\").setAll({\r\n\t\t\tpaddingLeft: 8,\r\n\t\t\tlayout: gridLayout\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}:\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"hover\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\", \"last\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\tcursorOverStyle: \"default\"\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"breadcrumb\", \"label\", \"background\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Partition\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Partition\").setAll({\r\n\t\t\tdownDepth: 1,\r\n\t\t\tupDepth: 0,\r\n\t\t\tinitialDepth: 5\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 1,\r\n\t\t\tvisible: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"partition\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\trotation: 90,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"Label\", [\"horizontal\", \"partition\", \"node\"]).setAll({\r\n\t\t\trotation: 0\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Sunburst\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Sunburst\").setAll({\r\n\t\t\tsingleBranchOnly: true\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 0,\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Slice\", [\"sunburst\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadius: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"Slice\", [\"sunburst\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RadialLabel\", [\"sunburst\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\ttextType: \"radial\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4,\r\n\t\t\t\tbaseRadius: p50,\r\n\t\t\t\trotation: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: ForceDirected\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"ForceDirected\").setAll({\r\n\t\t\tminRadius: percent(1),\r\n\t\t\tmaxRadius: percent(8),\r\n\t\t\tinitialFrames: 500,\r\n\t\t\tcenterStrength: 0.8,\r\n\t\t\tmanyBodyStrength: -14,\r\n\t\t\tvelocityDecay: 0.5,\r\n\t\t\tlinkWithStrength: 0.5,\r\n\t\t\tshowOnFrame: 10,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Tree\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Tree\").setAll({\r\n\t\t\torientation: \"vertical\",\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Pack\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Pack\").setAll({\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tnodePadding: 0\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"pack\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Circle\", [\"pack\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tfillOpacity: 0.8,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"LinkedHierarchyNode\").setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\tr(\"LinkedHierarchyNode\").states.create(\"hidden\", { scale: 0, opacity: 0, visible: false });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Treemap\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Treemap\").setAll({\r\n\t\t\tupDepth: 0,\r\n\t\t\tlayoutAlgorithm: \"squarify\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"treemap\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"HierarchyNode\", [\"treemap\", \"node\"]).setAll({\r\n\t\t\ttooltipY: percent(40),\r\n\t\t\tisMeasured: false,\r\n\t\t\tposition: \"absolute\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"treemap\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0,\r\n\t\t\t\tfillOpacity: 1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IBreadcrumbBarSettings extends IContainerSettings {\n\n\t/**\n\t * A hierarchy series bar will use to build current selection path.\n\t */\n\tseries: Hierarchy;\n\n}\n\nexport interface IBreadcrumbBarPrivate extends IContainerPrivate {\n}\n\nexport interface IBreadcrumbBarEvents extends IContainerEvents {\n}\n\n/**\n * Creates a breadcrumb navigation control.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/breadcrumbs/} for more info\n * @important\n */\nexport class BreadcrumbBar extends Container {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IHierarchyDataItem>): Label {\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tlabel.states.create(\"hover\", {});\n\t\tlabel.states.create(\"down\", {});\n\t\tlabel.events.on(\"click\", () => {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tif (series) {\n\t\t\t\tseries.selectDataItem(dataItem);\n\t\t\t}\n\t\t});\n\n\t\tthis.labels.push(label);\n\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the bar.\n\t *\n\t * `labels.template` can be used to configure label apperance and behavior.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"label\"]),\n\t\t\tbackground: RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: [\"background\"]\n\t\t\t})\n\t\t}, [this.labels.template])\n\t);\n\n\tpublic static className: string = \"BreadcrumbBar\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([BreadcrumbBar.className]);\n\n\tdeclare public _settings: IBreadcrumbBarSettings;\n\tdeclare public _privateSettings: IBreadcrumbBarPrivate;\n\tdeclare public _events: IBreadcrumbBarEvents;\n\n\tprotected _disposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"breadcrumb\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"series\")) {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tconst previous = this._prevSettings.series;\n\t\t\tif (series != previous) {\n\t\t\t\tthis._disposer = series.events.on(\"dataitemselected\", (event) => {\n\t\t\t\t\tthis._handleDataItem(event.dataItem)\n\t\t\t\t})\n\t\t\t}\n\t\t\telse if (previous) {\n\t\t\t\tif (this._disposer) {\n\t\t\t\t\tthis._disposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._handleDataItem(series.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _handleDataItem(dataItem: DataItem<IHierarchyDataItem> | undefined) {\n\t\tthis.set(\"minHeight\", this.height());\n\t\tthis.children.clear();\n\t\tthis.labels.clear();\n\n\t\tif (dataItem) {\n\t\t\tlet parent = dataItem;\n\n\t\t\twhile (parent) {\n\t\t\t\tlet label = this.makeLabel(parent);\n\t\t\t\tif (parent == dataItem) {\n\t\t\t\t\tlabel.addTag(\"last\");\n\t\t\t\t}\n\t\t\t\tthis.children.moveValue(label, 0);\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\n\nexport interface IHierarchyNodeSettings extends IContainerSettings {\n}\n\nexport interface IHierarchyNodePrivate extends IContainerPrivate {\n}\n\n/**\n * Base class for hierarchy nodes.\n */\nexport class HierarchyNode extends Container {\n\n\t/**\n\t * Related series.\n\t */\n\tpublic series: Hierarchy | undefined;\n\n\tdeclare public _settings: IHierarchyNodeSettings;\n\tdeclare public _privateSettings: IHierarchyNodePrivate;\n\n\tpublic static className: string = \"HierarchyNode\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([HierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<IHierarchyDataItem> | undefined;\n\n\tprotected _clickDisposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\n\t\tthis.on(\"disabled\", () => {\n\t\t\tconst dataItem = this.dataItem as DataItem<IHierarchyDataItem>;\n\t\t\tif (!dataItem.get(\"children\")) {\n\t\t\t\tthis.set(\"disabled\", true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst disabled = this.get(\"disabled\");\n\t\t\tconst series = this.series;\n\n\t\t\tif (dataItem && series) {\n\t\t\t\tif (dataItem.get(\"disabled\") != disabled) {\n\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\tseries.disableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.enableDataItem(dataItem, series.get(\"downDepth\", 1), 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tconst toggleKey = this.get(\"toggleKey\");\n\n\t\t\tif (toggleKey == \"disabled\") {\n\t\t\t\tthis._clickDisposer = this.events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tlet series = this.series;\n\t\t\t\t\t\tif (series) {\n\t\t\t\t\t\t\tseries.selectDataItem(this.dataItem as DataItem<IHierarchyDataItem>);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._clickDisposer) {\n\t\t\t\t\tthis._clickDisposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import type { Color } from \"../../core/util/Color\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Root } from \"../../core/Root\";\nimport type { Easing } from \"../../core/util/Ease\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { DataItem } from \"../../core/render/Component\";\nimport { HierarchyNode } from \"./HierarchyNode\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IHierarchyDataObject[],\n\tdataItem?: DataItem<IHierarchyDataItem>\n\tcustomValue?: boolean;\n};\n\nexport interface IHierarchyDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Value of the node as set in data.\n\t */\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\t/**\n\t * Percent value of the node, based on total sum of all nodes in upper level.\n\t */\n\tvaluePercentTotal: number;\n\n\t/**\n\t * Percent value of the node, based on the value of its direct parent.\n\t *\n\t * @since 5.2.21\n\t */\n\tvaluePercent: number;\n\n\t/**\n\t * Sum of child values.\n\t */\n\tsum: number;\n\n\t/**\n\t * Category.\n\t */\n\tcategory: string;\n\n\t/**\n\t * List of child node data items.\n\t */\n\tchildren: Array<DataItem<IHierarchyDataItem>>;\n\n\t/**\n\t * Raw data of the node's children.\n\t */\n\tchildData: Array<any>\n\n\t/**\n\t * Data item of parent node.\n\t */\n\tparent: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Node's depth within the hierarchy.\n\t */\n\tdepth: number;\n\n\t/**\n\t * A reference to the related [[HierarchyNode]].\n\t */\n\tnode: HierarchyNode;\n\n\t/**\n\t * A reference to node's [[Label]].\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Node's auto-assigned color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * Indicates if node is currently disabled.\n\t */\n\tdisabled: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>;\n\n}\n\nexport interface IHierarchySettings extends ISeriesSettings {\n\t/**\n\t * How to sort nodes by their value.\n\t *\n\t * @default \"none\"\n\t */\n\tsort?: \"ascending\" | \"descending\" | \"none\"\n\n\n\t/**\n\t * A field in data that holds numeric value for the node.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A field in data that holds string-based identificator for node.\n\t */\n\tcategoryField?: string;\n\n\t/**\n\t * A field in data that holds an array of child node data.\n\t */\n\tchildDataField?: string;\n\n\t/**\n\t * A field in data that holds boolean value indicating if node is\n\t * disabled (collapsed).\n\t */\n\tdisabledField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills for various elements, such\n\t * as nodes.\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] to use when asigning colors for nodes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Node_colors} for more info\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * Number of child levels to open when clicking on a node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tdownDepth?: number;\n\n\t/**\n\t * Number of levels parent levels to show from currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tupDepth?: number;\n\n\t/**\n\t * Number of levels to show on chart's first load.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\tinitialDepth?: number;\n\n\t/**\n\t * If set, will show nodes starting from set level.\n\t *\n\t * It could be used to eliminate top level branches, that do not need to be\n\t * shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\ttopDepth?: number;\n\n\t/**\n\t * If set to `true` will make all other branches collapse when some branch is\n\t * expanded.\n\t */\n\tsingleBranchOnly?: boolean;\n\n\t/**\n\t * A data item for currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Pre_selected_branch} for more info\n\t */\n\tselectedDataItem?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Duration for all drill animations in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for drill animations.\n\t */\n\tanimationEasing?: Easing;\n\n}\n\nexport interface IHierarchyPrivate extends ISeriesPrivate {\n\n\t/**\n\t * Level count in series.\n\t */\n\tmaxDepth: number;\n\n}\n\nexport interface IHierarchyEvents extends ISeriesEvents {\n\tdataitemselected: {\n\t\tdataItem?: DataItem<IHierarchyDataItem>\n\t};\n}\n\n/**\n * A base class for all hierarchy charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/} for more info\n */\nexport abstract class Hierarchy extends Series {\n\tpublic static className: string = \"Hierarchy\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Hierarchy.className]);\n\n\tdeclare public _settings: IHierarchySettings;\n\tdeclare public _privateSettings: IHierarchyPrivate;\n\tdeclare public _dataItemSettings: IHierarchyDataItem;\n\tdeclare public _events: IHierarchyEvents;\n\n\t/**\n\t * A [[Container]] that nodes are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly nodesContainer = this.children.push(Container.new(this._root, { isMeasured: false }));\n\n\tpublic _rootNode: d3hierarchy.HierarchyNode<IHierarchyDataObject> | undefined;\n\n\tpublic _treeData: IHierarchyDataObject | undefined;\n\n\tprotected _index: number = 0;\n\n\tprotected _tag: string = \"hierarchy\";\n\n\t/**\n\t * A list of nodes in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<HierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyNode.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\"])\n\t\t}, this.nodes.template)\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\n\t\tconst childData = dataItem.get(\"childData\");\n\n\t\tconst node = this.nodes.make();\n\t\tnode.series = this;\n\t\tnode._setDataItem(dataItem);\n\t\tthis.nodes.push(node);\n\t\tdataItem.setRaw(\"node\", node);\n\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\n\t\tif (!childData || childData.length == 0) {\n\t\t\tnode.addTag(\"last\");\n\t\t}\n\n\t\tconst depth = dataItem.get(\"depth\");\n\t\tnode.addTag(\"depth\" + depth);\n\n\t\tthis.nodesContainer.children.push(node);\n\t\tnode.children.push(label);\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, this.labels.template)\n\t);\n\n\tpublic _currentDownDepth: number | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis.fields.push(\"category\", \"childData\", \"disabled\", \"fill\");\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._treeData = {};\n\n\t\t\tconst first = this.dataItems[0];\n\t\t\tif (first) {\n\t\t\t\tthis._makeHierarchyData(this._treeData, first);\n\t\t\t\tthis._index = 0;\n\t\t\t\tthis._rootNode = (d3hierarchy.hierarchy(this._treeData) as any);\n\t\t\t\tif (this._rootNode) {\n\t\t\t\t\tthis._rootNode.sum((d) => {\n\t\t\t\t\t\treturn d.value as any;\n\t\t\t\t\t});\n\t\t\t\t\tconst sort = this.get(\"sort\")\n\t\t\t\t\tif (sort == \"descending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (b.value as any) - (a.value as any));\n\t\t\t\t\t}\n\t\t\t\t\telse if (sort == \"ascending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (a.value as any) - (b.value as any));\n\t\t\t\t\t}\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", -Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"maxDepth\", 0);\n\t\t\t\t\tthis._updateValues(this._rootNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tconst dataItem = this.get(\"selectedDataItem\");\n\t\t\tif(dataItem){\n\t\t\t\tthis._zoom(dataItem);\t\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"selectedDataItem\")) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNodes(hierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\n\t\tif (dataItem) {\n\t\t\tthis._updateNode(dataItem);\n\n\t\t\tif (this.bullets.length > 0 && !dataItem.bullets) {\n\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateNode(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * Looks up and returns a data item by its ID.\n\t *\n\t * @param   id  ID\n\t * @return      Data item\n\t */\n\tpublic getDataItemById(id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\t\treturn this._getDataItemById(this.dataItems, id);\n\t}\t\n\n\tpublic _getDataItemById(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>, id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\n\t\tlet di: DataItem<this[\"_dataItemSettings\"]> | undefined;\n\n\t\t$array.each(dataItems, (dataItem: any) => {\n\n\t\t\tif (dataItem.get(\"id\") == id) {\n\t\t\t\tdi = dataItem;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tlet childDataItem = this._getDataItemById(children, id);\n\t\t\t\tif (childDataItem) {\n\t\t\t\t\tdi = childDataItem\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn di;\n\t}\n\n\tprotected _handleBullets(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children) {\n\t\t\t\tthis._handleBullets(children);\n\t\t\t}\n\t\t})\n\n\t\tthis._updateVisuals();\n\t}\n\n\tprotected _onDataClear() {\n\t\tsuper._onDataClear();\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst childData = dataItem.get(\"childData\");\n\t\tconst colors = this.get(\"colors\");\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tif (!dataItem.get(\"parent\")) {\n\t\t\tdataItem.setRaw(\"depth\", 0);\n\t\t\tif (colors && topDepth == 0 && dataItem.get(\"fill\") == null) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tlet depth = dataItem.get(\"depth\");\n\t\tconst initialDepth = this.get(\"initialDepth\", 1);\n\n\t\tthis.makeNode(dataItem);\n\t\tthis._processDataItem(dataItem);\n\n\t\tif (childData) {\n\t\t\tconst children: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\t\t\tdataItem.setRaw(\"children\", children);\n\n\t\t\t$array.each(childData, (child) => {\n\t\t\t\tconst childDataItem = new DataItem(this, child, this._makeDataItem(child));\n\n\t\t\t\tchildren.push(childDataItem);\n\n\t\t\t\tchildDataItem.setRaw(\"parent\", dataItem);\n\t\t\t\tchildDataItem.setRaw(\"depth\", depth + 1);\n\n\t\t\t\tif (this.dataItems.length == 1 && depth == 0) {\n\t\t\t\t\tif (colors && childDataItem.get(\"fill\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fill\", colors.next());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (childDataItem.get(\"fill\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.processDataItem(childDataItem);\n\t\t\t})\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (!children || children.length == 0) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tnode.setAll({ toggleKey: undefined });\n\t\t}\n\n\t\tif (dataItem.get(\"disabled\") == null) {\n\t\t\tif (depth >= topDepth + initialDepth) {\n\t\t\t\tthis.disableDataItem(dataItem, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = d3HierarchyNode.data.dataItem;\n\n\t\tif (d3HierarchyNode.depth > this.getPrivate(\"maxDepth\")) {\n\t\t\tthis.setPrivateRaw(\"maxDepth\", d3HierarchyNode.depth);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tdataItem.setRaw(\"d3HierarchyNode\", d3HierarchyNode);\n\n\t\t\t(d3HierarchyNode as any).index = this._index;\n\n\t\t\tthis._index++;\n\n\t\t\tdataItem.get(\"node\").set(\"disabled\", dataItem.get(\"disabled\"));\n\n\t\t\tlet dataValue = d3HierarchyNode.data.value;\n\t\t\tlet value = d3HierarchyNode.value\n\n\t\t\tif (dataValue != null) {\n\t\t\t\tvalue = dataValue;\n\t\t\t\t(d3HierarchyNode as any)[\"value\"] = value;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdataItem.setRaw(\"sum\", value);\n\t\t\t\tdataItem.setRaw(\"valuePercentTotal\", value / this.dataItems[0].get(\"sum\") * 100);\n\n\t\t\t\tlet valuePercent = 100;\n\t\t\t\tconst parent = dataItem.get(\"parent\");\n\t\t\t\tif (parent) {\n\t\t\t\t\tvaluePercent = value / parent.get(\"sum\") * 100;\n\t\t\t\t}\n\t\t\t\tdataItem.get(\"label\").text.markDirtyText();\n\t\t\t\tdataItem.setRaw(\"valuePercent\", valuePercent);\n\n\t\t\t\tif (this.getPrivate(\"valueLow\") > value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", value);\n\t\t\t\t}\n\n\t\t\t\tif (this.getPrivate(\"valueHigh\") < value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst hierarchyChildren = d3HierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (d3HierarchyChild) => {\n\t\t\t\tthis._updateValues(d3HierarchyChild);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _makeHierarchyData(data: IHierarchyDataObject, dataItem: DataItem<IHierarchyDataItem>) {\n\t\tdata.dataItem = dataItem;\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tconst childrenDataArray: Array<IHierarchyDataObject> = [];\n\t\t\tdata.children = childrenDataArray;\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tconst childData = {};\n\t\t\t\tchildrenDataArray.push(childData);\n\t\t\t\tthis._makeHierarchyData(childData, childDataItem);\n\t\t\t})\n\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disposeDataItem(child);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tconst stateAnimationDuration = \"stateAnimationDuration\"\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: 0, duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.hide();\n\t\tnode.hideTooltip();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.hideDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.show();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.showDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Enables a disabled data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic enableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, maxDepth?: number, depth?: number, duration?: number) {\n\t\tif (depth == null) {\n\t\t\tdepth = 0;\n\t\t}\n\n\t\tif (maxDepth == null) {\n\t\t\tmaxDepth = 1;\n\t\t}\n\n\t\tdataItem.set(\"disabled\", false);\n\t\tdataItem.get(\"node\").set(\"disabled\", false);\n\n\t\tif (!dataItem.isHidden()) {\n\t\t\tdataItem.get(\"node\").show(duration);\n\t\t}\n\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\t\tif (dataItem.get(\"depth\") < topDepth) {\n\t\t\tdataItem.get(\"node\").hide(0);\n\t\t}\n\n\t\tif (depth == 0) {\n\t\t\tconst upDepth = this.get(\"upDepth\", Infinity);\n\t\t\tlet parent = dataItem;\n\t\t\tlet count = 0;\n\n\t\t\twhile (parent !== undefined) {\n\t\t\t\tif (count > upDepth) {\n\t\t\t\t\tparent.get(\"node\").hide();\n\t\t\t\t}\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tif (depth < maxDepth - 1) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tconst disabledField = this.get(\"disabledField\");\n\t\t\t\t\tif (disabledField) {\n\t\t\t\t\t\tconst dataContext = child.dataContext as any;\n\t\t\t\t\t\tif (dataContext[disabledField] != true) {\n\t\t\t\t\t\t\tthis.enableDataItem(child, maxDepth, depth as number + 1, duration);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.enableDataItem(child, maxDepth, depth as number + 1, duration);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (!child.isHidden()) {\n\t\t\t\t\t\tchild.get(\"node\").show(duration);\n\t\t\t\t\t\tchild.get(\"node\").states.applyAnimate(\"disabled\");\n\t\t\t\t\t\tchild.set(\"disabled\", true);\n\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Disables a data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic disableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number) {\n\t\tdataItem.set(\"disabled\", true);\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disableDataItem(child, duration);\n\t\t\t\tchild.get(\"node\").hide(duration);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _selectDataItem(dataItem?: DataItem<this[\"_dataItemSettings\"]>, downDepth?: number, skipDisptach?: boolean) {\n\t\tif (dataItem) {\n\t\t\tif (!skipDisptach) {\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: dataItem });\n\t\t\t}\n\n\t\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\t\tif (downDepth == null) {\n\t\t\t\tdownDepth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\t\t\t}\n\n\t\t\tif (!this.inited) {\n\t\t\t\tdownDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\t\t\t}\n\n\t\t\tthis._currentDownDepth = downDepth;\n\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (currentDepth + downDepth > maxDepth) {\n\t\t\t\tdownDepth = maxDepth - currentDepth;\n\t\t\t}\n\n\t\t\tif (currentDepth < topDepth) {\n\t\t\t\tdownDepth += topDepth - currentDepth;\n\t\t\t\tcurrentDepth = topDepth;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tif (downDepth > 0) {\n\t\t\t\t\tthis.enableDataItem(dataItem, downDepth);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem.get(\"node\").show();\n\t\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (hierarchyNode.depth < topDepth) {\n\t\t\t\t\tdataItem.get(\"node\").hide(0);\n\t\t\t\t}\n\n\t\t\t\tif (this.get(\"singleBranchOnly\")) {\n\t\t\t\t\tthis._handleSingle(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.enableDataItem(this.dataItems[0], downDepth, 0);\n\t\t\t}\n\n\t\t\tthis._zoom(dataItem);\n\t\t}\n\n\t}\n\n\tprotected _zoom(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Selects specific data item.\n\t *\n\t * @param  dataItem  Target data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\n\t\tif (this.get(\"selectedDataItem\") == dataItem) {\n\t\t\tif (parent) {\n\t\t\t\tthis.set(\"selectedDataItem\", parent);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet depth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\n\t\t\t\tif (this._currentDownDepth == depth) {\n\t\t\t\t\tdepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - this.get(\"topDepth\", 0));\n\t\t\t\t}\n\n\t\t\t\tthis._selectDataItem(dataItem, depth);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t}\n\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tif (sprite) {\n\t\t\t\tnode.children.push(sprite);\n\t\t\t\tnode.on(\"width\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t\tnode.on(\"height\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tsprite.set(\"x\", node.width() * locationX);\n\t\t\tsprite.set(\"y\", node.height() * locationY);\n\t\t}\n\t}\n\n\t/**\n\t * Triggers hover on a series data item.\n\t *\n\t * @since 5.0.7\n\t * @param  dataItem  Target data item\n\t */\n\tpublic hoverDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node && !node.isHidden()) {\n\t\t\tnode.hover();\n\t\t}\n\t}\n\n\t/**\n\t * Triggers un-hover on a series data item.\n\t *\n\t * @since 5.0.7\n\t * @param  dataItem  Target data item\n\t */\n\tpublic unhoverDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tnode.unhover();\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { LinkedHierarchy, ILinkedHierarchyDataItem } from \"./LinkedHierarchy\";\n\nimport { HierarchyNode, IHierarchyNodePrivate, IHierarchyNodeSettings } from \"./HierarchyNode\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface ILinkedHierarchyNodeSettings extends IHierarchyNodeSettings {\n}\n\nexport interface ILinkedHierarchyNodePrivate extends IHierarchyNodePrivate {\n}\n\n/**\n * A node class for [[LinkedHierarchy]].\n */\nexport class LinkedHierarchyNode extends HierarchyNode {\n\n\t/**\n\t * A series node belongs to.\n\t */\n\tdeclare public series: LinkedHierarchy | undefined;\n\n\tdeclare public _settings: ILinkedHierarchyNodeSettings;\n\tdeclare public _privateSettings: ILinkedHierarchyNodePrivate;\n\n\tpublic static className: string = \"LinkedHierarchyNode\";\n\tpublic static classNames: Array<string> = HierarchyNode.classNames.concat([LinkedHierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<ILinkedHierarchyDataItem> | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\t}\n\n\n\tpublic _updateLinks(duration?: number) {\n\t\tconst dataItem = this.dataItem;\n\t\tif (dataItem) {\n\t\t\tlet links = (dataItem as DataItem<ILinkedHierarchyDataItem>).get(\"links\");\n\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tlet source = link.get(\"source\")\n\t\t\t\tlet target = link.get(\"target\")\n\n\t\t\t\tif (source && target) {\n\t\t\t\t\tif (source.get(\"node\").isHidden() || target.get(\"node\").isHidden()) {\n\t\t\t\t\t\tlink.hide(duration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlink.show(duration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"disabled\")) {\n\t\t\tthis._updateLinks();\n\t\t}\n\t}\n\n\tprotected _onHide(duration?: number) {\n\t\tsuper._onHide(duration);\n\t\tthis._updateLinks(duration);\n\t}\n\n\tprotected _onShow(duration?: number) {\n\t\tsuper._onShow(duration);\n\t\tthis._updateLinks(duration);\n\t}\n}\n","import type { IHierarchyDataItem } from \"./Hierarchy\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\n\nexport interface IHierarchyLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Strength of the link.\n\t */\n\tstrength?: number;\n\n\t/**\n\t * Distance in pixels.\n\t */\n\tdistance?: number;\n\n}\n\nexport interface IHierarchyLinkPrivate extends IGraphicsPrivate {\n\td3Link:any;\n}\n\n/**\n * Draws a link between nodes in a hierarchy series.\n */\nexport class HierarchyLink extends Graphics {\n\tdeclare public _settings: IHierarchyLinkSettings;\n\tdeclare public _privateSettings: IHierarchyLinkPrivate;\n\n\tpublic static className: string = \"HierarchyLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([HierarchyLink.className]);\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this._clear) {\n\t\t\tlet source = this.get(\"source\");\n\t\t\tlet target = this.get(\"target\");\n\t\t\tif (source && target) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\tthis._display.moveTo(sourceNode.x(), sourceNode.y());\n\t\t\t\tthis._display.lineTo(targetNode.x(), targetNode.y());\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"source\")) {\n\t\t\tconst source = this.get(\"source\");\n\t\t\tif (source) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tsourceNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"target\")) {\n\t\t\tconst target = this.get(\"target\");\n\t\t\tif (target) {\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\ttargetNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type * as d3hierarchy from \"d3-hierarchy\";\n\nimport { Hierarchy, IHierarchySettings, IHierarchyDataItem, IHierarchyPrivate, IHierarchyEvents } from \"./Hierarchy\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport { HierarchyLink } from \"./HierarchyLink\";\nimport { Template } from \"../../core/util/Template\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface ILinkedHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ILinkedHierarchyDataObject[],\n\tdataItem?: DataItem<ILinkedHierarchyDataItem>\n};\n\nexport interface ILinkedHierarchyDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of child data items.\n\t */\n\tchildren: Array<DataItem<ILinkedHierarchyDataItem>>;\n\n\t/**\n\t * A data item of a parent node.\n\t */\n\tparent: DataItem<ILinkedHierarchyDataItem>;\n\n\t/**\n\t * A related node.\n\t */\n\tnode: LinkedHierarchyNode;\n\n\t/**\n\t * [[Circle]] element of the related node.\n\t */\n\tcircle: Circle;\n\n\t/**\n\t * [[Circle]] element of the related node, representing outer circle.\n\t */\n\touterCircle: Circle;\n\n\t/**\n\t * A [[HierarchyLink]] leading to parent node.\n\t */\n\tparentLink: HierarchyLink;\n\n\t/**\n\t * An [[HierarchyLink]] leading to parent node.\n\t */\n\tlinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of [[HierarchyLink]] objects leading to child nodes.\n\t */\n\tchildLinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of IDs of directly linked nodes.\n\t */\n\tlinkWith: Array<string>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyPointNode<ILinkedHierarchyDataObject>;\n\n}\n\nexport interface ILinkedHierarchySettings extends IHierarchySettings {\n\n\t/**\n\t * A field in data which holds IDs of nodes to link with.\n\t */\n\tlinkWithField?: string;\n\n}\n\nexport interface ILinkedHierarchyPrivate extends IHierarchyPrivate {\n}\n\nexport interface ILinkedHierarchyEvents extends IHierarchyEvents {\n}\n\n/**\n * A base class for linked hierarchy series.\n */\nexport abstract class LinkedHierarchy extends Hierarchy {\n\n\tpublic static className: string = \"LinkedHierarchy\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([LinkedHierarchy.className]);\n\n\tdeclare public _settings: ILinkedHierarchySettings;\n\tdeclare public _privateSettings: ILinkedHierarchyPrivate;\n\tdeclare public _dataItemSettings: ILinkedHierarchyDataItem;\n\tdeclare public _events: ILinkedHierarchyEvents;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"linkWith\", \"x\", \"y\");\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A list of nodes in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<LinkedHierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<LinkedHierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => LinkedHierarchyNode._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"node\"]),\n\t\t\tx: this.width() / 2,\n\t\t\ty: this.height() / 2\n\t\t}, [this.nodes.template])\n\t);\n\n\t/**\n\t * A list of node circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\t/**\n\t * A list of node outer circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly outerCircles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.outerCircles.template.get(\"themeTags\", []), [this._tag, \"outer\", \"shape\"])\n\t\t}, [this.outerCircles.template])\n\t);\n\n\t/**\n\t * A list of link elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyLink>\n\t */\n\tpublic readonly links: ListTemplate<HierarchyLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyLink._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.links.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"link\"])\n\t\t}, [this.links.template])\n\t);\n\n\t/**\n\t * A [[Container]] that link elements are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.moveValue(Container.new(this._root, {}), 0);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): LinkedHierarchyNode {\n\t\tconst node = super.makeNode(dataItem) as LinkedHierarchyNode;\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tthis.circles.push(circle);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst outerCircle = node.children.moveValue(this.outerCircles.make(), 0);\n\t\tthis.outerCircles.push(outerCircle);\n\t\tdataItem.setRaw(\"outerCircle\", outerCircle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d })\n\t\t\touterCircle.set(\"radius\", d / 2);\n\n\t\t\tthis._handleRadiusChange();\n\t\t})\n\n\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t\n\t\tcircle._setDataItem(dataItem);\n\t\touterCircle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _handleRadiusChange() {\n\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.setRaw(\"childLinks\", []);\n\t\tdataItem.setRaw(\"links\", []);\n\t\tsuper.processDataItem(dataItem);\n\t}\n\n\tprotected _processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._processDataItem(dataItem);\n\n\t\tconst parentDataItem = dataItem.get(\"parent\");\n\t\tif (parentDataItem && parentDataItem.get(\"depth\") >= this.get(\"topDepth\")) {\n\t\t\tconst link = this.linkDataItems(parentDataItem, dataItem);\n\t\t\tdataItem.setRaw(\"parentLink\", link);\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tthis.updateLinkWith(this.dataItems);\n\t\tnode._updateLinks(0);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t}\n\n\tprotected _animatePositions(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst point = this._getPoint(hierarchyNode);\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: point.x, duration: duration, easing: easing });\n\t\tnode.animate({ key: \"y\", to: point.y, duration: duration, easing: easing });\t\t\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tthis._animatePositions(dataItem);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t})\n\t\t}\n\n\t\tconst fill = dataItem.get(\"fill\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst children = dataItem.get(\"children\");\n\t\t\n\t\tif (circle) {\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\n\t\tconst outerCircle = dataItem.get(\"outerCircle\");\n\t\tif (outerCircle) {\n\t\t\touterCircle._setDefault(\"fill\", fill);\n\t\t\touterCircle._setDefault(\"stroke\", fill);\n\n\t\t\tif (!children || children.length == 0) {\n\t\t\t\touterCircle.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Link two data items with a link element.\n\t *\n\t * @param   source    Source node data item\n\t * @param   target    Target node data item\n\t * @param   strength  Link strength\n\t * @return            Link element\n\t */\n\tpublic linkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>, strength?: number): HierarchyLink {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (!link) {\n\t\t\tlink = this.links.make();\n\t\t\tthis.links.push(link);\n\t\t\tthis.linksContainer.children.push(link);\n\t\t\tlink.set(\"source\", source);\n\t\t\tlink.set(\"target\", target);\n\t\t\tlink._setDataItem(source);\n\t\t\tlink.set(\"stroke\", source.get(\"fill\"));\n\t\t\tif (strength != null) {\n\t\t\t\tlink.set(\"strength\", strength)\n\t\t\t}\n\n\t\t\tsource.get(\"childLinks\").push(link);\n\n\t\t\t$array.move(source.get(\"links\"), link);\n\t\t\t$array.move(target.get(\"links\"), link);\n\n\t\t\tthis._processLink(link, source, target);\n\t\t}\n\n\t\treturn link;\n\t}\n\n\n\t/**\n\t * Unlink two linked data items.\n\t *\n\t * @param   source  Source node data item\n\t * @param   target  Target node data item\n\t */\n\tpublic unlinkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(sourceLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(targetLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (link) {\n\t\t\tthis._disposeLink(link);\n\t\t}\n\n\t\tthis._handleUnlink();\n\t}\n\n\tprotected _handleUnlink() {\n\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tthis.links.removeValue(link);\n\t\tlink.dispose();\n\t}\n\n\t/**\n\t * Returns `true` if two nodes are linked with each other.\n\t */\n\tpublic areLinked(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tconst sourceLinks = source.get(\"links\");\n\t\tlet linked = false;\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn linked;\n\t}\n\n\tprotected _processLink(_link: HierarchyLink, _source: DataItem<this[\"_dataItemSettings\"]>, _target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst links = dataItem.get(\"links\");\n\t\tif (links) {\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tthis._disposeLink(link)\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Select a data item.\n\t * @param  dataItem  Data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\n\t\tif (!dataItem.get(\"disabled\")) {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t\telse {\n\t\t\tif (parent) {\n\t\t\t\tthis.setRaw(\"selectedDataItem\", parent);\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: parent });\n\t\t\t\tthis.disableDataItem(dataItem);\n\t\t\t}\n\t\t}\n\t}\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport type { HierarchyLink } from \"./HierarchyLink\";\nimport type * as d3Hierarchy from \"d3-hierarchy\";\n\nimport { LinkedHierarchy, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyPrivate, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as d3Force from \"d3-force\";\n\n/**\n * @ignore\n */\nexport interface IForceDirectedDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IForceDirectedDataObject[],\n\tdataItem?: DataItem<IForceDirectedDataItem>\n};\n\nexport interface IForceDirectedDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IForceDirectedDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<IForceDirectedDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3ForceNode: d3Force.SimulationNodeDatum;\n\n\t/**\n\t * X coordinate.\n\t */\n\tx: number | undefined;\n\n\t/**\n\t * Y coordinate.\n\t */\n\ty: number | undefined;\n}\n\nexport interface IForceDirectedSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Minimum gap in pixels between the nodes.\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to the center of the\n\t * chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tcenterStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to each other.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default -15\n\t */\n\tmanyBodyStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) nodes that are linked together\n\t * via `linkWithField`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tlinkWithStrength?: number | undefined;\n\n\t/**\n\t * Resistance acting agains node speed.\n\t *\n\t * The greater the value, the more \"sluggish\" the nodes will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tvelocityDecay?: number;\n\n\t/**\n\t * Length of how long initial force simulation would run in frames.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 500\n\t */\n\tinitialFrames?: number;\n\n\t/**\n\t * If set to a number will wait X number of frames before revealing\n\t * the tree.\n\t *\n\t * Can be used to hide initial animations where nodes settle into their\n\t * places.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 10\n\t */\n\tshowOnFrame?: number;\n\n\t/**\n\t * Smallest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 1%\n\t */\n\tminRadius?: number | Percent;\n\n\t/**\n\t * Biggest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 8%\n\t */\n\tmaxRadius?: number | Percent;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\txField?: string;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\tyField?: string;\n\n}\n\nexport interface IForceDirectedPrivate extends ILinkedHierarchyPrivate {\n}\n\nexport interface IForceDirectedEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Creates a force-directed tree.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/} for more info\n * @important\n */\nexport class ForceDirected extends LinkedHierarchy {\n\n\tprotected _tag: string = \"forcedirected\";\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly d3forceSimulation: d3Force.Simulation<{}, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceSimulation();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly collisionForce: d3Force.ForceCollide<d3Force.SimulationNodeDatum> = d3Force.forceCollide(20);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic linkForce: d3Force.ForceLink<d3Force.SimulationNodeDatum, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceLink();\n\n\tpublic static className: string = \"ForceDirected\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([ForceDirected.className]);\n\n\tdeclare public _settings: IForceDirectedSettings;\n\tdeclare public _privateSettings: IForceDirectedPrivate;\n\tdeclare public _dataItemSettings: IForceDirectedDataItem;\n\tdeclare public _events: IForceDirectedEvents;\n\n\tprotected _nodes: Array<any> = [];\n\tprotected _links: Array<any> = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.d3forceSimulation.on(\"tick\", () => {\n\t\t\tthis._tick++;\n\t\t\tthis.updateNodePositions();\n\t\t});\n\t}\n\n\tprotected _tick: number = 0;\n\tprotected _nodesDirty: boolean = false;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tif (this.isDirty(\"showOnFrame\")) {\n\t\t\tconst showOnFrame = this.get(\"showOnFrame\");\n\t\t\tif (showOnFrame > this._tick) {\n\t\t\t\tthis.nodesContainer.setPrivate(\"visible\", false);\n\t\t\t\tthis.linksContainer.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this.isDirty(\"velocityDecay\")) {\n\t\t\td3forceSimulation.velocityDecay(this.get(\"velocityDecay\", 0));\n\t\t}\n\n\t\tif (this.isDirty(\"initialFrames\")) {\n\t\t\td3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / this.get(\"initialFrames\", 500)));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic restartSimulation(alpha: number): void {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\tif (d3forceSimulation.alpha() < .25) {\n\t\t\td3forceSimulation.alpha(alpha);\n\t\t\td3forceSimulation.restart();\n\t\t}\n\t}\n\n\tpublic _handleRadiusChange() {\n\t\tthis._updateForces();\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3ForceNode: any = { index: this._index, x: this.innerWidth() / 2, y: this.innerHeight() / 2, dataItem: dataItem };\n\t\tconst index = this._nodes.push(d3ForceNode) - 1;\n\t\td3ForceNode.index = index;\n\n\t\tthis.d3forceSimulation.nodes(this._nodes);\n\n\t\tdataItem.set(\"d3ForceNode\", d3ForceNode);\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.set(\"x\", -10000);\n\t\tnode.on(\"scale\", () => {\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\td3ForceNode.fx = node.x();\n\t\t\td3ForceNode.fy = node.y();\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragstop\", () => {\n\t\t\tif (dataItem.get(\"x\") == null) {\n\t\t\t\td3ForceNode.fx = undefined;\n\t\t\t}\n\t\t\tif (dataItem.get(\"y\") == null) {\n\t\t\t\td3ForceNode.fy = undefined;\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3Hierarchy.HierarchyNode<IForceDirectedDataObject>) {\n\t\tsuper._updateValues(d3HierarchyNode);\n\n\t\tthis._nodesDirty = true;\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"collision\", this.collisionForce);\n\t\td3forceSimulation.nodes(this._nodes);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\td3forceSimulation.force(\"link\", this.linkForce);\n\t}\n\n\tprotected _updateVisuals() {\n\t\tsuper._updateVisuals();\n\t\tthis.restartSimulation(.3);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this._sizeDirty) {\n\t\t\tlet w = Math.max(50, this.innerWidth());\n\t\t\tlet h = Math.max(50, this.innerHeight());\n\t\t\tlet pt = this.get(\"paddingTop\", 0);\n\t\t\tlet pl = this.get(\"paddingLeft\", 0);\n\n\t\t\tlet centerStrength = this.get(\"centerStrength\", 1);\n\n\t\t\td3forceSimulation.force(\"x\", d3Force.forceX().x(w / 2 + pl).strength(centerStrength * 100 / w));\n\t\t\td3forceSimulation.force(\"y\", d3Force.forceY().y(h / 2 + pt).strength(centerStrength * 100 / h));\n\t\t}\n\n\t\tif (this._nodesDirty) {\n\t\t\tthis._updateForces();\n\t\t}\n\t}\n\n\tpublic _updateForces() {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"manybody\", d3Force.forceManyBody().strength((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet manyBodyStrength = this.get(\"manyBodyStrength\", -15);\n\n\t\t\tif (circle) {\n\t\t\t\treturn circle.get(\"radius\", 1) * node.get(\"scale\", 1) * manyBodyStrength;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}));\n\n\t\tthis.collisionForce.radius((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet outerCircle = dataItem.get(\"outerCircle\");\n\t\t\tif (circle && outerCircle) {\n\t\t\t\tlet radius = circle.get(\"radius\", 1);\n\n\t\t\t\tif (!outerCircle.isHidden()) {\n\t\t\t\t\tradius = radius * outerCircle.get(\"scale\", 1.1);\n\t\t\t\t}\n\n\t\t\t\tradius *= node.get(\"scale\", 1);\n\n\t\t\t\treturn radius + this.get(\"nodePadding\", 0);\n\t\t\t}\n\t\t})\n\t\tthis.restartSimulation(0.3);\n\t}\n\n\tprotected _animatePositions(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\t// void, do not remove\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._nodesDirty = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateNodePositions() {\n\t\tconst linkForce = this.linkForce;\n\t\tif (linkForce) {\n\t\t\tlinkForce.distance((linkDatum) => {\n\t\t\t\treturn this.getDistance(linkDatum)\n\t\t\t});\n\t\t\tlinkForce.strength((linkDatum) => {\n\t\t\t\treturn this.getStrength(linkDatum)\n\t\t\t});\n\t\t}\n\t\tif (this._tick == this.get(\"showOnFrame\")) {\n\t\t\tthis.nodesContainer.setPrivate(\"visible\", true);\n\t\t\tthis.linksContainer.setPrivate(\"visible\", true);\n\t\t}\n\n\t\tlet d3Nodes = this.d3forceSimulation.nodes();\n\n\t\t$array.each(d3Nodes, (d3Node: any) => {\n\t\t\tconst dataItem = d3Node.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tnode.set(\"x\", d3Node.x);\n\t\t\tnode.set(\"y\", d3Node.y);\n\t\t})\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem, this.get(\"linkWithStrength\"));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected getDistance(linkDatum: any) {\n\t\tlet sourceDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.sourceDataItem;\n\t\tlet targetDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.targetDataItem;\n\n\t\tlet distance = 0;\n\n\t\tif (sourceDataItem && targetDataItem) {\n\n\t\t\tconst targetNode = targetDataItem.get(\"node\");\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet link = linkDatum.link;\n\t\t\tif (link) {\n\t\t\t\tdistance = link.get(\"distance\", 1);\n\t\t\t}\n\n\t\t\tconst sourceNode = sourceDataItem.get(\"node\");\n\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\tdistance = 1;\n\t\t\t}\n\n\t\t\treturn (distance * (sourceDataItem.get(\"circle\").get(\"radius\", 1) * sourceNode.get(\"scale\", 1) + targetDataItem.get(\"circle\").get(\"radius\", 1) * targetNode.get(\"scale\", 1)));\n\t\t}\n\t\treturn distance;\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo description\n\t */\n\tprotected getStrength(linkDatum: any) {\n\t\tlet strength = 0;\n\n\t\tlet link = linkDatum.link;\n\t\tif (link) {\n\t\t\tstrength = link.get(\"strength\", 1);\n\t\t}\n\n\t\tconst targetDataItem = linkDatum.targetDataItem;\n\t\tstrength *= targetDataItem.get(\"node\").get(\"scale\");\n\n\t\treturn strength;\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\t\tthis._updateRadius(dataItem);\n\n\t\tconst x = dataItem.get(\"x\");\n\t\tconst y = dataItem.get(\"y\");\n\n\t\tconst d3Node = dataItem.get(\"d3ForceNode\");\n\n\t\tif (x != null) {\n\t\t\t(d3Node as any).fx = $utils.relativeToValue(x, this.innerWidth());\n\t\t}\n\t\telse {\n\t\t\t(d3Node as any).fx = undefined;\n\t\t}\n\n\t\tif (y != null) {\n\t\t\t(d3Node as any).fy = $utils.relativeToValue(y, this.innerHeight());\n\t\t}\n\t\telse {\n\t\t\t(d3Node as any).fx = undefined;\n\t\t}\n\t}\n\n\tprotected _updateRadius(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet size = (this.innerWidth() + this.innerHeight()) / 2;\n\n\t\tlet minRadius = $utils.relativeToValue(this.get(\"minRadius\", 1), size);\n\t\tlet maxRadius = $utils.relativeToValue(this.get(\"maxRadius\", 5), size);\n\n\t\tlet valueWorking = dataItem.get(\"sum\");\n\n\t\tlet radius = maxRadius;\n\n\t\tconst min = this.getPrivate(\"valueLow\", 0);\n\t\tconst max = this.getPrivate(\"valueHigh\", 0);\n\n\t\tif (max > 0) {\n\t\t\tradius = minRadius + (valueWorking - min) / (max - min) * (maxRadius - minRadius);\n\t\t}\n\n\t\tif (!$type.isNumber(radius)) {\n\t\t\tradius = minRadius;\n\t\t}\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tdataItem.get(\"circle\").animate({ key: \"radius\", to: radius, duration: duration, easing: easing });\n\t}\n\n\tprotected _processLink(link: HierarchyLink, source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3Link = { link: link, source: source.get(\"d3ForceNode\").index, target: target.get(\"d3ForceNode\").index, sourceDataItem: source, targetDataItem: target };\n\t\tthis._links.push(d3Link);\n\t\tlink.setPrivate(\"d3Link\", d3Link);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\tthis.d3forceSimulation.force(\"link\", this.linkForce);\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tsuper._disposeLink(link);\n\t\t$array.remove(this._links, link.getPrivate(\"d3Link\"));\n\t}\n\n\tprotected _handleUnlink() {\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _onDataClear() {\n\n\t\tsuper._onDataClear();\n\n\t\tthis._nodes = [];\n\t\tthis._links = [];\n\t}\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {shuffle} from \"../array.js\";\nimport lcg from \"../lcg.js\";\n\nexport default function(circles) {\n  return packEncloseRandom(circles, lcg());\n}\n\nexport function packEncloseRandom(circles, random) {\n  var i = 0, n = (circles = shuffle(Array.from(circles), random)).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import array from \"../array.js\";\nimport lcg from \"../lcg.js\";\nimport {packEncloseRandom} from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packSiblingsRandom(circles, random) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packSiblingsRandom(circles, lcg());\n  return circles;\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array, random) {\n  let m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport {packSiblingsRandom} from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    const random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyEvents } from \"./Hierarchy\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface IPackDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPackDataObject[],\n\tdataItem?: DataItem<IPackDataItem>\n};\n\nexport interface IPackDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of data items of node's children.\n\t */\n\tchildren: Array<DataItem<IPackDataItem>>;\n\n\t/**\n\t * A data item of node's parent.\n\t */\n\tparent: DataItem<IPackDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>;\n\n\t/**\n\t * A [[Circle]] element of the node.\n\t */\n\tcircle: Circle;\n\n}\n\nexport interface IPackSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes, in pixels.\n\t *\n\t * @since 5.2.6\n\t */\n\tnodePadding?:number\n\n}\n\nexport interface IPackPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tscaleR?: number;\n\n}\n\nexport interface IPackEvents extends IHierarchyEvents {\n}\n\n/**\n * Builds a pack diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Pack extends Hierarchy {\n\n\tdeclare public _settings: IPackSettings;\n\tdeclare public _privateSettings: IPackPrivate;\n\tdeclare public _dataItemSettings: IPackDataItem;\n\n\tprotected _tag: string = \"pack\";\n\n\tpublic static className: string = \"Pack\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Pack.className]);\n\n\tpublic _packLayout = d3hierarchy.pack();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<IPackDataObject> | undefined;\n\tpublic _packData: IPackDataObject | undefined;\n\n\t/**\n\t * A list of node circle elements in a [[Pack]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleR\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"scaleR\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst packLayout = this._packLayout;\n\t\t\tpackLayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\tpackLayout(this._rootNode);\n\t\t\tpackLayout.padding(this.get(\"nodePadding\", 0));\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\tconst x = hierarchyNode.x * scaleR;\n\t\tconst y = hierarchyNode.y * scaleR;\n\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y, duration: duration, easing: easing })\n\n\t\tif (circle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tcircle.animate({ key: \"radius\", to: radius, duration: duration, easing: easing })\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst circle = dataItem.get(\"circle\");\n\n\t\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\t\tconst x = hierarchyNode.x * scaleR;\n\t\t\tconst y = hierarchyNode.y * scaleR;\n\t\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\t\tnode.setAll({ x: x, y: y })\n\t\t\tcircle.set(\"radius\", radius);\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tthis.circles.push(circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet x = hierarchyNode.x;\n\t\tlet y = hierarchyNode.y;\n\t\tlet r = hierarchyNode.r;\n\n\t\tlet scaleR = Math.min(this.innerWidth(), this.innerHeight()) / (r * 2);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleR\", to: scaleR, duration: duration, easing: easing });\n\n\t\tconst nodesContainer = this.nodesContainer;\n\t\tnodesContainer.animate({ key: \"x\", from: nodesContainer.x(), to: this.width() / 2 - x * scaleR, duration: duration, easing: easing });\n\t\tnodesContainer.animate({ key: \"y\", from: nodesContainer.y(), to: this.height() / 2 - y * scaleR, duration: duration, easing: easing });\n\t}\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IPartitionDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPartitionDataObject[],\n\tdataItem?: DataItem<IPartitionDataItem>\n};\n\nexport interface IPartitionDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IPartitionDataItem>>;\n\n\t/**\n\t * Data it of a parent node.\n\t */\n\tparent: DataItem<IPartitionDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\n\t/**\n\t * A [[RoundedRectangle]] element of a node.\n\t */\n\trectangle: RoundedRectangle;\n\n}\n\nexport interface IPartitionSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes in pixels.\n\t *\n\t * @default 0\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface IPartitionPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Partition series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/partition/} for more info\n */\nexport class Partition extends Hierarchy {\n\n\tdeclare public _settings: IPartitionSettings;\n\tdeclare public _privateSettings: IPartitionPrivate;\n\tdeclare public _dataItemSettings: IPartitionDataItem;\n\n\tprotected _tag: string = \"partition\";\n\n\tpublic static className: string = \"Partition\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Partition.className]);\n\n\t/**\n\t * A list of node rectangle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject> | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"partition\", this._settings.orientation || \"vertical\"]);\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"nodePadding\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\t[w, h] = [h, w];\n\t\t\t}\n\n\t\t\tpartitionLayout.size([w, h]);\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tlet x0, x1, y0, y1: number;\n\n\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t}\n\t\telse {\n\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t}\n\t\tlet w = x1 - x0;\n\t\tlet h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\t\t\t\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\t\t\t\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tlet x0, x1, y0, y1: number;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t\t}\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\t\tthis._makeNode(dataItem, node);\n\t\treturn node;\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\t\trectangle._setDataItem(dataItem);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.set(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.set(\"maxHeight\", rectangle.height());\n\t\t})\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet y0 = 0;\n\t\tlet y1 = 0;\n\n\t\tconst upDepth = this.get(\"upDepth\", 0) + 1;\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tconst width = this.innerWidth();\n\t\tconst height = this.innerHeight();\n\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tconst levelHeight = height / (maxDepth + 1);\n\t\tconst levelWidth = width / (maxDepth + 1);\n\t\tconst initialDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\n\t\tlet downDepth = this._currentDownDepth;\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0;\n\t\t\t\tx1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = hierarchyNode.x0;\n\t\t\t\ty1 = hierarchyNode.x1;\n\n\t\t\t\tx0 = x1 - levelWidth * upDepth;\n\t\t\t\tx1 = x0 + levelWidth * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\ty0 = 0;\n\t\t\t\t\ty1 = height;\n\t\t\t\t\tx0 = levelWidth * topDepth;\n\t\t\t\t\tx1 = x0 + levelWidth * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0;\n\t\t\t\tx1 = hierarchyNode.x1;\n\n\t\t\t\ty0 = hierarchyNode.y0;\n\t\t\t\ty1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = y1 - levelHeight * upDepth;\n\t\t\t\ty1 = y0 + levelHeight * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\tx0 = 0;\n\t\t\t\t\tx1 = width;\n\t\t\t\t\ty0 = levelHeight * topDepth;\n\t\t\t\t\ty1 = y0 + levelHeight * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet scaleX = width / (x1 - x0);\n\t\tlet scaleY = height / (y1 - y0);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\tthis.nodesContainer.animate({ key: \"x\", to: -x0 * scaleX, duration: duration, easing: easing });\n\t\tthis.nodesContainer.animate({ key: \"y\", to: -y0 * scaleY, duration: duration, easing: easing });\n\t}\n}\n","import type { Root } from \"../../core/Root\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Series } from \"../../core/render/Series\";\n\nimport { Partition, IPartitionPrivate, IPartitionSettings, IPartitionDataItem } from \"./Partition\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\nimport { Percent, p100, p50 } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\n\n/**\n * @ignore\n */\nexport interface ISunburstDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ISunburstDataObject[],\n\tdataItem?: DataItem<ISunburstDataItem>\n};\n\nexport interface ISunburstDataItem extends IPartitionDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<ISunburstDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<ISunburstDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3PartitionNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>;\n\n\t/**\n\t * A [[Slice]] element of the node.\n\t */\n\tslice: Slice;\n\n}\n\nexport interface ISunburstSettings extends IPartitionSettings {\n\n\t/**\n\t * Start angle of the series.\n\t *\n\t * @default -90\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * End angle of the series.\n\t *\n\t * @default 270\n\t */\n\tendAngle?: number;\n\n\t/**\n\t * Inner radius of the suburst pie.\n\t *\n\t * Setting to negative number will mean pixels from outer radius.\n\t *\n\t * @default 0\n\t */\n\tinnerRadius?: number | Percent;\n\n\t/**\n\t * Outer radius of the sunburst pie.\n\t *\n\t * @default 100%\n\t */\n\tradius?: number | Percent;\n\n}\n\nexport interface ISunburstPrivate extends IPartitionPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tdr: number;\n\n\t/**\n\t * @ignore\n\t */\n\tdx: number;\n\n\t/**\n\t * @ignore\n\t */\n\tinnerRadius: number;\n\n\t/**\n\t * @ignore\n\t */\n\thierarchySize?: number;\n\n}\n\n/**\n * Builds a sunburst diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Sunburst extends Partition {\n\n\tdeclare public _settings: ISunburstSettings;\n\tdeclare public _privateSettings: ISunburstPrivate;\n\tdeclare public _dataItemSettings: ISunburstDataItem;\n\n\tprotected _tag: string = \"sunburst\";\n\n\tpublic static className: string = \"Sunburst\";\n\tpublic static classNames: Array<string> = Partition.classNames.concat([Sunburst.className]);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject> | undefined;\n\n\t/**\n\t * A list of node slice elements in a [[Sunburst]] chart.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly slices: ListTemplate<Slice> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\", \"shape\"])\n\t\t}, [this.slices.template])\n\t);\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RadialLabel>\n\t */\n\tpublic readonly labels: ListTemplate<RadialLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RadialLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, [this.labels.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.nodesContainer.setAll({ x: p50, y: p50 });\n\t\tthis.setPrivateRaw(\"dx\", 0);\n\t\tthis.setPrivateRaw(\"dr\", 0);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"dr\") || this.isPrivateDirty(\"dx\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\n\t\t\tlet bounds = $math.getArcBounds(0, 0, this.get(\"startAngle\", 0), this.get(\"endAngle\", 360), 1);\n\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tconst wr = w / (bounds.right - bounds.left);\n\t\t\tconst hr = h / (bounds.bottom - bounds.top);\n\n\t\t\tlet s = Math.min(wr, hr);\n\n\t\t\tlet r = $utils.relativeToValue(this.get(\"radius\", p100), s);\n\t\t\tlet ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\n\n\t\t\tif (ir < 0) {\n\t\t\t\tir = r + ir;\n\t\t\t}\n\n\t\t\ts = r - ir;\n\n\t\t\tthis.setPrivateRaw(\"innerRadius\", ir);\n\t\t\tthis.setPrivateRaw(\"hierarchySize\", s);\n\n\t\t\tpartitionLayout.size([s, s]);\n\n\t\t\tthis.nodesContainer.setAll({\n\t\t\t\tdy: -r * (bounds.bottom + bounds.top) / 2, dx: -r * (bounds.right + bounds.left) / 2\n\t\t\t})\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\tconst node = dataItem.get(\"node\");\n\n\t\tnode.setAll({ x: 0, y: 0 });\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tif (slice) {\n\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\tsliceInnerRadius -= dr;\n\t\t\tsliceRadius -= dr;\n\n\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\tslice.animate({ key: \"radius\", to: sliceRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"innerRadius\", to: sliceInnerRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"startAngle\", to: sliceStartAngle, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"arc\", to: arc, duration: duration, easing: easing })\n\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tslice._setDefault(\"fill\", fill);\n\t\t\tslice._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tif (slice) {\n\t\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\t\tsliceInnerRadius -= dr;\n\t\t\t\tsliceRadius -= dr;\n\n\t\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\t\tslice.setAll({ radius: sliceRadius, innerRadius: sliceInnerRadius, startAngle: sliceStartAngle, arc: arc });\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst slice = node.children.moveValue(this.slices.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", slice);\n\t\tdataItem.setRaw(\"slice\", slice);\n\n\t\tslice._setDataItem(dataItem);\n\n\t\tslice.on(\"arc\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"innerRadius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"radius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t}\n\n\tprotected _updateLabel(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tconst label = dataItem.get(\"label\") as RadialLabel;\n\n\t\tif (slice && label) {\n\t\t\tlet innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tlet radius = slice.get(\"radius\", 0);\n\t\t\tlet angle = slice.get(\"startAngle\", 0);\n\t\t\tlet arc = Math.abs(slice.get(\"arc\", 0));\n\t\t\tlet labelAngle = angle + arc / 2;\n\t\t\tlet textType = label.get(\"textType\");\n\n\t\t\tlet maxWidth = radius - innerRadius;\n\t\t\tlet maxHeight = radius * arc * $math.RADIANS;\n\n\t\t\tif (innerRadius == 0 && arc >= 360 && textType == \"radial\") {\n\t\t\t\tradius = 1;\n\t\t\t\tlabelAngle = 0;\n\t\t\t\tmaxWidth *= 2;\n\t\t\t\tmaxHeight = maxWidth;\t\t\t\t\n\t\t\t}\n\n\t\t\tif (Math.round(arc) >= 360 && textType == \"radial\") {\n\t\t\t\tlabelAngle = 0;\n\t\t\t}\t\t\t\n\n\t\t\tif (textType == \"circular\") {\n\t\t\t\tmaxWidth = arc * $math.RADIANS * (innerRadius + (radius - innerRadius) / 2) - 10;\n\t\t\t}\n\n\n\t\t\tlabel.setAll({ labelAngle: labelAngle });\n\t\t\tlabel.setPrivate(\"radius\", radius);\n\t\t\tlabel.setPrivate(\"innerRadius\", innerRadius);\n\n\t\t\tlabel.setAll({\n\t\t\t\tmaxHeight: maxHeight,\n\t\t\t\tmaxWidth: maxWidth\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet upDepth = this.get(\"upDepth\", 0);\n\t\tlet topDepth = this.get(\"topDepth\", 0);\n\t\tlet currentDepth = hierarchyNode.depth;\n\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tlet downDepth = this._currentDownDepth;\n\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tconst levelHeight = hs / (maxDepth + 1);\n\n\t\tif (currentDepth < topDepth) {\n\t\t\tcurrentDepth = topDepth;\n\t\t}\n\n\t\tif (currentDepth - upDepth < 0) {\n\t\t\tupDepth = currentDepth;\n\t\t}\n\n\t\tx0 = hierarchyNode.x0;\n\t\tx1 = hierarchyNode.x1;\n\n\t\tlet scaleDepth = (downDepth + upDepth + 1);\n\n\t\tif (scaleDepth > maxDepth - topDepth + 1) {\n\t\t\tscaleDepth = maxDepth - topDepth + 1;\n\t\t}\n\n\t\tlet scaleX = hs / (x1 - x0);\n\t\tlet scaleY = hs / (levelHeight * scaleDepth);\n\n\t\tlet dr = Math.max(currentDepth - upDepth, topDepth) * levelHeight * scaleY;\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tlet dx = -x0 * scaleX\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dr\", to: dr, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dx\", to: dx, duration: duration, easing: easing });\n\t}\n\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis._handleSingle(parent);\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tconst arc = slice.get(\"arc\", 0);\n\t\t\tconst angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\n\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tconst radius = innerRadius + (slice.get(\"radius\", 0) - innerRadius) * locationY;\n\n\t\t\tlet x = $math.cos(angle) * radius;\n\t\t\tlet y = $math.sin(angle) * radius;\n\n\t\t\tif ($math.round(arc, 5) === 360 && $math.round(innerRadius, 2) === 0) {\n\t\t\t\tx = 0;\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tsprite.set(\"x\", x);\n\t\t\tsprite.set(\"y\", y);\n\t\t}\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst slice = dataItem.get(\"slice\");\n\n\t\t\tif (sprite && slice) {\n\t\t\t\tslice.on(\"arc\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\n\t\t\t\tslice.on(\"radius\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn bullet;\n\t\t}\n\t}\n}\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { LinkedHierarchy, ILinkedHierarchyPrivate, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreeDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ITreeDataObject[],\n\tdataItem?: DataItem<ITreeDataItem>\n};\n\nexport interface ITreeDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of children data items.\n\t */\n\tchildren: Array<DataItem<ITreeDataItem>>;\n\n\t/**\n\t * Parent data item.\n\t * @type {DataItem<ITreeDataItem>}\n\t */\n\tparent: DataItem<ITreeDataItem>;\n\n}\n\nexport interface ITreeSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n\t/**\n\t * If set to `true`, will flip the tree direction.\n\t *\n\t * @default false\n\t * @since 5.2.4\n\t */\n\tinversed?: boolean;\n\n}\n\nexport interface ITreePrivate extends ILinkedHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n}\n\nexport interface ITreeEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Displays a tree diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/tree/} for more info\n * @important\n */\nexport class Tree extends LinkedHierarchy {\n\n\tdeclare public _settings: ITreeSettings;\n\tdeclare public _privateSettings: ITreePrivate;\n\tdeclare public _dataItemSettings: ITreeDataItem;\n\n\tprotected _tag: string = \"tree\";\n\n\tpublic static className: string = \"Tree\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([Tree.className]);\n\n\tpublic _hierarchyLayout = d3hierarchy.tree();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<ITreeDataObject> | undefined;\n\tpublic _packData: ITreeDataObject | undefined;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"orientation\") || this.isDirty(\"inversed\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst layout = this._hierarchyLayout;\n\n\t\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\t\tlayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlayout.size([this.innerHeight(), this.innerWidth()]);\n\t\t\t}\n\n\t\t\tlayout(this._rootNode);\n\t\t}\n\n\t\tsuper._updateVisuals();\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\tconst inversed = this.get(\"inversed\");\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tif (inversed) {\n\t\t\t\treturn { x: hierarchyNode.x, y: this.innerHeight() - hierarchyNode.y };\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inversed) {\n\t\t\t\treturn { x: this.innerWidth() - hierarchyNode.y, y: hierarchyNode.x };\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn { x: hierarchyNode.y, y: hierarchyNode.x };\n\t\t\t}\n\t\t}\n\t}\n\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreemapDataObject { name?: string, value?: number, children?: ITreemapDataObject[], dataItem?: DataItem<ITreemapDataItem> };\n\nexport interface ITreemapDataItem extends IHierarchyDataItem {\n\tchildren: Array<DataItem<ITreemapDataItem>>;\n\tparent: DataItem<ITreemapDataItem>;\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\trectangle: RoundedRectangle;\n}\n\nexport interface ITreemapSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingInner?: number;\n\n\t/**\n\t * Gap between nodes and outer edge of the chart. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingOuter?: number;\n\n\t/**\n\t * Gap between nodes and top edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingTop?: number;\n\n\t/**\n\t * Gap between nodes and bottomedge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingBottom?: number;\n\n\t/**\n\t * Gap between nodes and left edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingLeft?: number;\n\n\t/**\n\t * Gap between nodes and bottom edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingRight?: number;\n\n\t/**\n\t * An algorithm to use when laying out node rectangles.\n\t *\n\t * @see {@link }\n\t * @default \"squarify\"\n\t */\n\tlayoutAlgorithm?: \"binary\" | \"squarify\" | \"slice\" | \"dice\" | \"sliceDice\";\n\n}\n\nexport interface ITreemapPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Treemap series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/} for more info\n */\nexport class Treemap extends Hierarchy {\n\n\tdeclare public _settings: ITreemapSettings;\n\tdeclare public _privateSettings: ITreemapPrivate;\n\tdeclare public _dataItemSettings: ITreemapDataItem;\n\n\tprotected _tag: string = \"treemap\";\n\n\tpublic static className: string = \"Treemap\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Treemap.className]);\n\n\tpublic readonly rectangleTemplate: Template<RoundedRectangle> = Template.new({});\n\n\tpublic _treemapLayout = d3hierarchy.treemap().tile(d3hierarchy.treemapSquarify);\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject> | undefined;\n\n\t/**\n\t * A list of node rectangle elements in a [[Treemap]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"layoutAlgorithm\")) {\n\t\t\tlet algorithm;\n\n\t\t\tswitch (this.get(\"layoutAlgorithm\")) {\n\t\t\t\tcase \"squarify\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSquarify;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"binary\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapBinary;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"slice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSlice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapDice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sliceDice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSliceDice;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (algorithm) {\n\t\t\t\tthis._treemapLayout = d3hierarchy.treemap().tile(algorithm);\n\t\t\t}\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"nodePaddingRight\") || this.isDirty(\"nodePaddingLeft\") || this.isDirty(\"nodePaddingTop\") || this.isDirty(\"nodePaddingBottom\") || this.isDirty(\"nodePaddingOuter\") || this.isDirty(\"nodePaddingInner\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst treemapLayout = this._treemapLayout;\n\t\t\ttreemapLayout.size([this.innerWidth(), this.innerHeight()]);\n\n\t\t\tconst paddingLeft = this.get(\"nodePaddingLeft\");\n\t\t\tconst paddingRight = this.get(\"nodePaddingRight\");\n\t\t\tconst paddingTop = this.get(\"nodePaddingTop\");\n\t\t\tconst paddingBottom = this.get(\"nodePaddingBottom\");\n\t\t\tconst paddingInner = this.get(\"nodePaddingInner\");\n\t\t\tconst paddingOuter = this.get(\"nodePaddingOuter\");\n\t\t\tif ($type.isNumber(paddingLeft)) {\n\t\t\t\ttreemapLayout.paddingLeft(paddingLeft);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingRight)) {\n\t\t\t\ttreemapLayout.paddingRight(paddingRight);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingTop)) {\n\t\t\t\ttreemapLayout.paddingTop(paddingTop);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingBottom)) {\n\t\t\t\ttreemapLayout.paddingBottom(paddingBottom);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingInner)) {\n\t\t\t\ttreemapLayout.paddingInner(paddingInner);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingOuter)) {\n\t\t\t\ttreemapLayout.paddingOuter(paddingOuter);\n\t\t\t}\n\n\t\t\ttreemapLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst w = x1 - x0;\n\t\tconst h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.setPrivate(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.setPrivate(\"maxHeight\", rectangle.height());\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif (this.width() > 0 && this.height() > 0) {\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\t\tconst nodePaddingOuter = this.get(\"nodePaddingOuter\", 0);\n\n\t\t\tlet x0 = hierarchyNode.x0 + nodePaddingOuter;\n\t\t\tlet x1 = hierarchyNode.x1 - nodePaddingOuter;\n\n\t\t\tlet y0 = hierarchyNode.y0 + nodePaddingOuter;\n\t\t\tlet y1 = hierarchyNode.y1 - nodePaddingOuter;\n\n\t\t\tlet scaleX = (this.innerWidth() - nodePaddingOuter * 2) / (x1 - x0);\n\t\t\tlet scaleY = (this.innerHeight() - nodePaddingOuter * 2) / (y1 - y0);\n\n\t\t\tconst easing = this.get(\"animationEasing\");\n\t\t\tconst duration = this.get(\"animationDuration\", 0);\n\n\t\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\t\tthis.nodesContainer.animate({ key: \"x\", to: nodePaddingOuter - x0 * scaleX, duration: duration, easing: easing });\n\t\t\tthis.nodesContainer.animate({ key: \"y\", to: nodePaddingOuter - y0 * scaleY, duration: duration, easing: easing });\n\t\t}\n\t}\n\n\tprotected _selectDataItem(dataItem?: DataItem<this[\"_dataItemSettings\"]>, downDepth?: number, skipDisptach?: boolean) {\n\t\tsuper._selectDataItem(dataItem, downDepth, skipDisptach);\n\t\tif (dataItem) {\n\t\t\tlet maxDepth = this.get(\"downDepth\", 1) + dataItem.get(\"depth\");\n\t\t\tif (!this.inited) {\n\t\t\t\tmaxDepth = this.get(\"initialDepth\", 1);\n\t\t\t}\n\t\t\tconst visibleNodes = this._getVisibleNodes(dataItem, maxDepth);\n\t\t\tthis.nodes.each((node) => {\n\t\t\t\tif (visibleNodes.indexOf(node.dataItem as DataItem<this[\"_dataItemSettings\"]>) == -1) {\n\t\t\t\t\tnode.setPrivate(\"focusable\", false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnode.removePrivate(\"focusable\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._root._invalidateTabindexes();\n\t}\n\n\tprotected _getVisibleNodes(dataItem: DataItem<this[\"_dataItemSettings\"]>, maxDepth: number) {\n\t\tconst children = dataItem.get(\"children\");\n\t\tlet includedChildren: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\t\t$array.each(children, (child) => {\n\t\t\tif (child.get(\"depth\") == maxDepth || !child.get(\"children\")) {\n\t\t\t\tincludedChildren.push(child);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tincludedChildren = includedChildren.concat(this._getVisibleNodes(child, maxDepth));\n\t\t\t}\n\t\t});\n\t\treturn includedChildren;\n\t}\n\n}\n","import * as m from \"./../../dist/es2015/hierarchy.js\";\nexport const am5hierarchy = m;"],"names":["HierarchyDefaultTheme","Theme","setupDefaultRules","super","ic","this","_root","interfaceColors","gridLayout","r","rule","bind","setAll","legendLabelText","legendValueText","width","height","colors","ColorSet","step","downDepth","initialDepth","singleBranchOnly","maskContent","animationEasing","toggleKey","setStateOnChildren","position","isMeasured","cursorOverStyle","tooltipText","centerX","centerY","paddingBottom","paddingTop","paddingRight","paddingLeft","text","populateText","oversizedBehavior","minScale","strokeWidth","strokeOpacity","strength","distance","fillOpacity","radius","tooltipY","opacity","strokeDasharray","scale","interactive","states","create","layout","stateAnimationDuration","fontWeight","upDepth","visible","x","y","rotation","cornerRadiusBR","cornerRadiusTR","cornerRadiusBL","cornerRadiusTL","cornerRadius","textType","baseRadius","minRadius","maxRadius","initialFrames","centerStrength","manyBodyStrength","velocityDecay","linkWithStrength","showOnFrame","Infinity","topDepth","orientation","nodePadding","draggable","layoutAlgorithm","BreadcrumbBar","Container","List","Template","Label","themeTags","labels","template","get","background","RoundedRectangle","makeLabel","dataItem","label","make","_setDataItem","events","on","series","selectDataItem","push","_afterNew","_defaultThemes","_settings","_changed","isDirty","previous","_prevSettings","_disposer","event","_handleDataItem","dispose","set","children","clear","parent","addTag","moveValue","className","HierarchyNode","disabled","disableDataItem","enableDataItem","_clickDisposer","_isDragging","count","node","sum","i","length","value","hierarchy","data","Map","undefined","mapChildren","objectChildren","child","childs","n","root","Node","nodes","pop","Array","from","depth","eachBefore","computeHeight","d","isArray","copyData","prototype","constructor","eachAfter","each","callback","that","index","call","next","find","sort","compare","path","end","start","ancestor","a","b","aNodes","ancestors","bNodes","c","leastCommonAncestor","k","splice","descendants","leaves","links","source","target","copy","Symbol","iterator","current","reverse","Hierarchy","Series","_tag","makeNode","childData","setRaw","nodesContainer","fields","bulletsContainer","_prepareChildren","_valuesDirty","_treeData","first","dataItems","_makeHierarchyData","_index","_rootNode","setPrivateRaw","_updateValues","_sizeDirty","_updateVisuals","_zoom","_selectDataItem","_updateNodes","hierarchyNode","_updateNode","bullets","_makeBullets","hierarchyChildren","hierarchyChild","_dataItem","getDataItemById","id","_getDataItemById","di","childDataItem","_handleBullets","bullet","_onDataClear","reset","processDataItem","_processDataItem","_makeDataItem","d3HierarchyNode","getPrivate","dataValue","valuePercent","markDirtyText","updateLegendValue","d3HierarchyChild","childrenDataArray","disposeDataItem","removeValue","hideDataItem","duration","promises","hiddenState","stateAnimationEasing","easing","animate","key","to","waitForStop","hide","hideTooltip","Promise","all","showDataItem","show","maxDepth","isHidden","disabledField","dataContext","applyAnimate","skipDisptach","type","dispatch","Math","min","inited","_currentDownDepth","currentDepth","_handleSingle","_makeBullet","bulletFunction","sprite","_positionBullet","locationX","locationY","hoverDataItem","hover","unhoverDataItem","unhover","LinkedHierarchyNode","_updateLinks","link","_onHide","_onShow","classNames","concat","HierarchyLink","Graphics","_clear","sourceNode","targetNode","_display","moveTo","lineTo","_beforeChanged","_markDirtyKey","LinkedHierarchy","_new","Circle","C","circles","outerCircles","circle","setPrivate","outerCircle","maxWidth","maxHeight","_handleRadiusChange","parentDataItem","linkDataItems","updateLinkWith","linkWith","linkWithDataItem","_getPoint","_animatePositions","point","fill","_setDefault","sourceLinks","lnk","targetLinks","linksContainer","_processLink","unlinkDataItems","_disposeLink","_handleUnlink","areLinked","linked","_link","_source","_target","m","initialAngle","PI","sqrt","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","forces","stepper","timer","random","s","tick","stop","iterations","forEach","force","fx","vx","fy","vy","initializeNodes","isNaN","angle","cos","sin","initializeForce","initialize","restart","_","arguments","randomSource","name","delete","dx","dy","d2","closest","tree","xm","ym","xp","yp","right","bottom","j","leaf","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","_y","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","leaf_copy","treeProto","radii","xi","yi","ri","ri2","visitAfter","prepare","visit","apply","quad","rj","l","jiggle","constant","_nodes","_random","nodeById","nodeId","Error","strengths","distances","bias","map","initializeStrength","initializeDistance","add","cover","xz","yz","floor","z","extent","x2","y2","q","x3","y3","quads","remove","retainer","removeAll","size","ForceDirected","d3forceSimulation","_tick","updateNodePositions","restartSimulation","_updateForces","d3ForceNode","innerWidth","innerHeight","_nodesDirty","collisionForce","linkForce","_links","_updateChildren","w","max","h","pt","pl","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","distanceMin","distanceMax","theta","d3node","_clearDirty","linkDatum","getDistance","getStrength","d3Nodes","d3Node","sourceDataItem","targetDataItem","_updateRadius","valueWorking","d3Link","optional","f","required","constantZero","extendBasis","B","p","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","r1","r2","x21","y21","r21","r3","a2","a3","b2","b3","c2","c3","d1","d3","ab","xa","xb","ya","yb","A","place","intersects","score","packSiblingsRandom","array","aa","ca","sj","sk","pack","e","t","shuffle","packEncloseRandom","defaultRadius","padding","radiusLeaf","packChildrenRandom","translateChild","Pack","isPrivateDirty","_updateNodesScale","packLayout","_packLayout","scaleR","animatePrivate","round","partition","positionNode","Partition","rectangles","partitionLayout","_partitionLayout","rectangle","scaleX","scaleY","_makeNode","levelHeight","levelWidth","Sunburst","Slice","slices","RadialLabel","bounds","wr","left","hr","top","ir","hs","slice","startAngle","endAngle","sliceStartAngle","arc","sliceInnerRadius","sliceRadius","innerRadius","_updateLabel","labelAngle","scaleDepth","defaultSeparation","nextLeft","v","nextRight","moveSubtree","wm","wp","shift","change","nextAncestor","vim","TreeNode","separation","nodeSize","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","siblings","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","Object","Tree","_hierarchyLayout","inversed","custom","ratio","squarify","row","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","rows","i0","i1","dice","squarifyRatio","tile","paddingStack","paddingInner","treemap","paddingOuter","sums","valueOffset","valueTarget","hi","mid","valueLeft","valueRight","xk","yk","Treemap","algorithm","_treemapLayout","treemapLayout","nodePaddingOuter","visibleNodes","_getVisibleNodes","indexOf","removePrivate","_invalidateTabindexes","includedChildren","am5hierarchy"],"sourceRoot":""}